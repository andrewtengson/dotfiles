function zsh_add_file() {
  [ -f "$ZDOTDIR/$1" ] && source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
  PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
  if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
    # For plugins
    zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
    zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
  else
    git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
  fi
}

function zsh_add_completion() {
  PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
  if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then
    # For completions
    completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
    fpath+="$(dirname "${completion_file_path}")"
      zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
  else
    git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
  fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
    [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
  fi
  completion_file="$(basename "${completion_file_path}")"
  if [ "$2" = true ] && compinit "${completion_file:1}"
}

function get_bedrock_creds() {
  local profile=$1
  local region=$2

  if [ -z "$profile" ] || [ -z "$region" ]; then
    echo "Usage: get_bedrock_creds <profile> <region>"
    return 1
  fi

  local creds=$(aws configure export-credentials --profile "$profile")

  local access_key=$(echo "$creds" | jq -r '.AccessKeyId')
  local secret_key=$(echo "$creds" | jq -r '.SecretAccessKey')
  local session_token=$(echo "$creds" | jq -r '.SessionToken')
  local expiration=$(echo "$creds" | jq -r '.Expiration')

  if command -v gdate &>/dev/null; then
    DATE_CMD="gdate"
  else
    DATE_CMD="date"
  fi

  if [ "$($DATE_CMD -d "$expiration" '+%s')" -lt "$($DATE_CMD '+%s')" ]; then
    aws sso login --profile "$profile" > /dev/null

    creds=$(aws configure export-credentials --profile "$profile")

    access_key=$(echo "$creds" | jq -r '.AccessKeyId')
    secret_key=$(echo "$creds" | jq -r '.SecretAccessKey')
    session_token=$(echo "$creds" | jq -r '.SessionToken')
    expiration=$(echo "$creds" | jq -r '.Expiration')
  fi

  echo "${access_key},${secret_key},${region},${session_token}"
}
